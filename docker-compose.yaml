services:
  nginx:
    image: nginx:latest
    container_name: reverse_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx:ro
    restart: unless-stopped
    networks:
      - server

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - server

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      PUID: 1002
      PGID: 1002
    ports:
      - "3000:3000"
    volumes:
      - ./homepage/config/bookmarks.yaml:/app/config/bookmarks.yaml:ro
      - ./homepage/config/custom.css:/app/config/custom.css:ro
      - ./homepage/config/custom.js:/app/config/custom.js:ro
      - ./homepage/config/docker.yaml:/app/config/docker.yaml:ro
      - ./homepage/config/kubernetes.yaml:/app/config/kubernetes.yaml:ro
      - ./homepage/config/services.yaml:/app/config/services.yaml:ro
      - ./homepage/config/settings.yaml:/app/config/settings.yaml:ro
      - ./homepage/config/widgets.yaml:/app/config/widgets.yaml:ro
      - ./homepage/images:/app/public/images
    restart: unless-stopped
    networks:
      - server

networks:
  server:
    # Define network for services
    external: true
